# Notes:
#   - Minimal appveyor.yml file is an empty file. All sections are optional.
#   - Indent each level of configuration with 2 spaces. Do not use tabs!
#   - All section names are case-sensitive.
#   - Section names should be unique on each level.

#---------------------------------#
#      general configuration      #
#---------------------------------#

# version format
version: 1.0.{build}

# you can use {branch} name in version format too
# version: 1.0.{build}-{branch}

# branches to build
branches:
  # whitelist
  only:
    - master
    - production

  # blacklist
  except:
    - gh-pages

# Do not build on tags (GitHub and BitBucket)
skip_tags: true

# Start builds on tags only (GitHub and BitBucket)
skip_non_tags: true

# Skipping commits with particular message or from specific user
skip_commits:
  message: /Created.*\.(png|jpg|jpeg|bmp|gif)/      # Regex for matching commit message
  author: John                                      # Commit author's username, name, email or regexp maching one of these.

# Including commits with particular message or from specific user
only_commits:
  message: /build/                # Start a new build if message contains 'build'
  author: jack@company.com        # Start a new build for commit of user with email jack@company.com

# Do not build feature branch with open Pull Requests
skip_branch_with_pr: true

# Maximum number of concurrent jobs for the project
max_jobs: 1

#---------------------------------#
#    environment configuration    #
#---------------------------------#

# Build worker image (VM template)
image: Visual Studio 2015

# scripts that are called at very beginning, before repo cloning
init:
  - git config --global core.autocrlf input
  #- ps: iex ((new-object net.webclient).DownloadString("https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1"))  

# clone directory
clone_folder: c:\projects\myproject

# fetch repository as zip archive
shallow_clone: true                 # default is "false"

# set clone depth
#clone_depth: 5                      # clone entire repository history if not defined

# setting up etc\hosts file
# hosts:
  # queue-server: 127.0.0.1
  # db.server.com: 127.0.0.2

# environment variables
# environment:
  # my_var1: value1
  # my_var2: value2
  # this is how to set encrypted variable. Go to "Encrypt data" page in account menu to encrypt data.
  # my_secure_var1:
    # secure: FW3tJ3fMncxvs58/ifSP7w==

environment:

  with_libpng: 1    # needs zlib; removing will break current tests

  with_libjpeg: 1   # will download nasm; removing will break current tests

  with_freetype: 1  # removing breaks bindings freetype test

  with_iconv: 0     

  with_tiff: 1      # needs zlib and jpeg
  
  appveyor_rdp_password: HelloWorld123
  
matrix:
  fast_finish: true     # set this flag to immediately finish build once one of the jobs fails.
  allow_failures:
    - platform: x86
      configuration: Release
      build_compiler: "mingw"
      build_bindings: 1
    # - platform: x64
      # configuration: Release


#---------------------------------#
#       build configuration       #
#---------------------------------#

# to run your custom scripts instead of automatic MSBuild
build_script:
  #- if [%build_compiler%]==[mingw] if [%build_platform%]==[x86] 
  - SET PATH=C:\MinGW\bin;%PATH%
  - cmd: gcc test.c -o test.exe -lws2_32
  
# to disable automatic builds
#build: off

#---------------------------------#
#       tests configuration       #
#---------------------------------#

# scripts to run after tests
#after_test:

# to run your custom scripts instead of automatic tests
#test_script:
  #- echo This is my custom test script

# to disable automatic tests
#test: off


#---------------------------------#
#      artifacts configuration    #
#---------------------------------#

artifacts:

  # pushing a single file
  - path: test.exe

  # pushing a single file with environment variable in path and "Deployment name" specified
  - path: winsock\bin\$(configuration)
    name: test-v{build}

  # pushing entire folder as a zip archive
  #- path: logs

  # pushing all *.nupkg files in build directory recursively
#  - path: **\*.nupkg

#---------------------------------#
#     deployment configuration    #
#---------------------------------#

# providers: Local, FTP, WebDeploy, AzureCS, AzureBlob, S3, NuGet, Environment
# provider names are case-sensitive!
deploy:
    release: test-v$(appveyor_build_version)
    description: release of v$(appveyor_build_version)
    provider: GitHub
    auth_token:
    secure: b4398a0556a03f646dd837b170f273d33cc9b232
    #artifact: /.*\.nupkg/           # upload all NuGet packages to release assets
    artifact: /.*\.exe/           # upload all NuGet packages to release assets	
    draft: false
    prerelease: false
    on:
      branch: master                # release from master branch only
      appveyor_repo_tag: true       # deploy on tag push only

# scripts to run before deployment
before_deploy:

# scripts to run after deployment
after_deploy:

# to run your custom scripts instead of provider deployments
deploy_script:

# to disable deployment
#deploy: off

#---------------------------------#
#        global handlers          #
#---------------------------------#

# on successful build
on_success:
  #- do something

# on build failure
on_failure:
  #- do something

# after build failure or success
on_finish:
  #- do something
  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString("https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1"))


#---------------------------------#
#         notifications           #
#---------------------------------#

notifications:

    on_build_success: false
    on_build_failure: true
    on_build_status_changed: true
